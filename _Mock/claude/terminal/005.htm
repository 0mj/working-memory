<!DOCTYPE html>
<html>
<head>
  <title>Terminal Webpage</title>
  <style>
    body {
      font-family: monospace;
      background-color: black;
      color: #00ff00;
      margin: 0;
      padding: 0;
    }
    
    #terminal {
      padding: 20px;
      height: 80vh;
      overflow-y: scroll;
    }
    
    #input-line {
      display: flex;
      align-items: center;
    }
    
    #input-line::before {
      content: "$ ";
    }
    
    #user-input {
      background-color: transparent;
      color: inherit;
      border: none;
      font-size: 16px;
      font-family: inherit;
      width: 100%;
    }
    
    #user-input:focus {
      outline: none;
    }
    
    a {
      color: inherit;
    }
  </style>
</head>
<body>
  <div id="terminal">
    <div id="input-line">
      <input type="text" id="user-input" placeholder="Type a command and press Enter" autofocus>
    </div>
  </div>

  <script>
    const terminal = document.getElementById('terminal');
    const userInput = document.getElementById('user-input');
    const inputLine = document.getElementById('input-line');

    const fileName = 'text_file.txt';

    async function appendToTextFile(text) {
      try {
        const fileHandle = await window.showSaveFilePicker({
          suggestedName: 'text_file.txt',
          types: [
            {
              description: 'Text File',
              accept: { 'text/plain': ['.txt'] },
            },
          ],
        });

        const fileStream = await fileHandle.createWritable();
        await fileStream.write(text + '\n');
        await fileStream.close();
        return 'Text appended to the file.';
      } catch (error) {
        console.error('Error appending to the file:', error);
        return 'Error appending to the file.';
      }
    }

    userInput.addEventListener('keydown', (event) => {
      if (event.key === 'Enter') {
        const command = userInput.value.trim();
        userInput.value = '';
        handleCommand(command);
      }
    });

    function handleCommand(command) {
      const response = processCommand(command);
      appendToTerminal(response);
    }

    function processCommand(command) {
      const parts = command.split(' ');
      const commandName = parts[0].toLowerCase();
      const commandArgs = parts.slice(1).join(' ');

      switch (commandName) {
        case 'help':
          return 'Available commands:\n- help\n- clear\n- date\n- echo [message]\n- sprint 11.12.24\n- append "[text to append]"';
        case 'clear':
          // Remove all child elements except the input line
          while (terminal.firstChild && terminal.firstChild !== inputLine) {
            terminal.removeChild(terminal.firstChild);
          }
          return '';
        case 'date':
          return new Date().toLocaleString();
        case 'sprint 11.12.24':
          return `Here are the URLs for the Sprint 11.12.24:\n
            <a href="https://bravowell.atlassian.net/browse/ISS20-4406">https://bravowell.atlassian.net/browse/ISS20-4406</a>
            <a href="https://bravowell.atlassian.net/browse/ISS20-4407">https://bravowell.atlassian.net/browse/ISS20-4407</a>
            <a href="https://bravowell.atlassian.net/browse/ISS20-4393">https://bravowell.atlassian.net/browse/ISS20-4393</a>
            <a href="https://bravowell.atlassian.net/browse/ISS20-4329">https://bravowell.atlassian.net/browse/ISS20-4329</a>
            <a href="https://bravowell.atlassian.net/browse/ISS20-3496">https://bravowell.atlassian.net/browse/ISS20-3496</a>
            <a href="https://bravowell.atlassian.net/browse/ISS20-4411">https://bravowell.atlassian.net/browse/ISS20-4411</a>
            <a href="https://bravowell.atlassian.net/browse/ISS20-4383">https://bravowell.atlassian.net/browse/ISS20-4383</a>
            <a href="https://bravowell.atlassian.net/browse/ISS20-4440">https://bravowell.atlassian.net/browse/ISS20-4440</a>
            <a href="https://bravowell.atlassian.net/browse/ISS20-4170">https://bravowell.atlassian.net/browse/ISS20-4170</a>
            <a href="https://bravowell.atlassian.net/browse/ISS20-4283">https://bravowell.atlassian.net/browse/ISS20-4283</a>
            <a href="https://bravowell.atlassian.net/browse/ISS20-4268">https://bravowell.atlassian.net/browse/ISS20-4268</a>
            <a href="https://bravowell.atlassian.net/browse/ISS20-3873">https://bravowell.atlassian.net/browse/ISS20-3873</a>`;
        case 'append':
          if (commandArgs.startsWith('"') && commandArgs.endsWith('"')) {
            const textToAppend = commandArgs.slice(1, -1);
            return appendToTextFile(textToAppend);
          } else {
            return 'Usage: append "[text to append]"';
          }
        default:
          if (commandName.startsWith('echo ')) {
            return commandArgs;
          } else {
            return `Command '${commandName}' not found.`;
          }
      }
    }

    function appendToTerminal(text) {
      const newLine = document.createElement('div');
      newLine.innerHTML = text;
      terminal.insertBefore(newLine, inputLine);
      userInput.focus();
    }
  </script>
</body>
</html>